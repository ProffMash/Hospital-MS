# Generated by Django 5.1.3 on 2025-09-23 17:42

from django.db import migrations, models
import json


def _sanitize_tests_and_results(apps, schema_editor):
    """Ensure existing textual values become valid JSON so ALTER FIELD to JSONField won't fail.

    - For `LabOders.tests` (TextField):
      * If value is valid JSON, keep normalized JSON string.
      * If comma-separated, split into array and store JSON string.
      * Otherwise, wrap single text into a single-element array.

    - For `LabResults.result` (TextField or text-like):
      * If value is valid JSON, keep normalized JSON string.
      * Otherwise, wrap as a single-element array.
    """
    LabOders = apps.get_model('hms', 'LabOders')
    LabResults = apps.get_model('hms', 'LabResults')

    # Sanitize LabOders.tests
    for lo in LabOders.objects.all():
        try:
            val = lo.tests
            if val is None:
                continue
            s = str(val).strip()
            # If already looks like JSON, attempt to parse
            try:
                parsed = json.loads(s)
                lo.tests = json.dumps(parsed)
            except Exception:
                # comma separated list -> array
                if ',' in s:
                    parts = [p.strip() for p in s.split(',') if p.strip()]
                    lo.tests = json.dumps(parts)
                else:
                    lo.tests = json.dumps([s])
            lo.save()
        except Exception:
            # best-effort: skip problematic rows to avoid blocking migration
            continue

    # Sanitize LabResults.result
    for lr in LabResults.objects.all():
        try:
            val = lr.result
            if val is None:
                continue
            s = str(val).strip()
            try:
                parsed = json.loads(s)
                lr.result = json.dumps(parsed)
            except Exception:
                # wrap as single-element array
                lr.result = json.dumps([s])
            lr.save()
        except Exception:
            continue


class Migration(migrations.Migration):

    dependencies = [
        ('hms', '0016_alter_labresults_result'),
    ]

    operations = [
        migrations.RunPython(
            code=_sanitize_tests_and_results,
            reverse_code=migrations.RunPython.noop,
        ),
        migrations.AlterField(
            model_name='laboders',
            name='tests',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AlterField(
            model_name='labresults',
            name='result',
            field=models.JSONField(blank=True, default=list),
        ),
    ]
